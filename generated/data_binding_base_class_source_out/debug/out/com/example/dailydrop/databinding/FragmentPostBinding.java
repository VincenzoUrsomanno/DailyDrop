// Generated by view binder compiler. Do not edit!
package com.example.dailydrop.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.dailydrop.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentPostBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Button buttonUpload;

  @NonNull
  public final ImageView imagePreview;

  @NonNull
  public final EditText inputRating;

  @NonNull
  public final EditText inputReview;

  @NonNull
  public final EditText inputStrainName;

  private FragmentPostBinding(@NonNull ScrollView rootView, @NonNull Button buttonUpload,
      @NonNull ImageView imagePreview, @NonNull EditText inputRating, @NonNull EditText inputReview,
      @NonNull EditText inputStrainName) {
    this.rootView = rootView;
    this.buttonUpload = buttonUpload;
    this.imagePreview = imagePreview;
    this.inputRating = inputRating;
    this.inputReview = inputReview;
    this.inputStrainName = inputStrainName;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentPostBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentPostBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_post, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentPostBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonUpload;
      Button buttonUpload = ViewBindings.findChildViewById(rootView, id);
      if (buttonUpload == null) {
        break missingId;
      }

      id = R.id.imagePreview;
      ImageView imagePreview = ViewBindings.findChildViewById(rootView, id);
      if (imagePreview == null) {
        break missingId;
      }

      id = R.id.inputRating;
      EditText inputRating = ViewBindings.findChildViewById(rootView, id);
      if (inputRating == null) {
        break missingId;
      }

      id = R.id.inputReview;
      EditText inputReview = ViewBindings.findChildViewById(rootView, id);
      if (inputReview == null) {
        break missingId;
      }

      id = R.id.inputStrainName;
      EditText inputStrainName = ViewBindings.findChildViewById(rootView, id);
      if (inputStrainName == null) {
        break missingId;
      }

      return new FragmentPostBinding((ScrollView) rootView, buttonUpload, imagePreview, inputRating,
          inputReview, inputStrainName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
